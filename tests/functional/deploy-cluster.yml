---
- name: load variables
  hosts: all
  become: false
  tasks:
    - include_vars: deploy-cluster-vars.yml

- name: gather facts and prepare system for cephadm
  hosts:
    - mons
    - mgrs
    - osds
  become: true
  gather_facts: false
  tasks:
    - import_role:
        name: ceph_defaults

    - name: gather and delegate facts
      setup:
        gather_subset:
          - 'all'
          - '!facter'
          - '!ohai'
      delegate_to: "{{ item }}"
      delegate_facts: true
      with_items: "{{ groups['all'] }}"
      run_once: true
      when: delegate_facts_host | bool

    - name: container registry authentication
      ceph_orch:
        cli_binary: true
        command: "cephadm registry-login --registry-url {{ ceph_container_registry }} --registry-username {{ ceph_container_registry_username }} --registry-password {{ ceph_container_registry_password }}"
      changed_when: false
      environment:
        HTTP_PROXY: "{{ ceph_container_http_proxy | default('') }}"
        HTTPS_PROXY: "{{ ceph_container_https_proxy | default('') }}"
        NO_PROXY: "{{ ceph_container_no_proxy }}"
      when: ceph_container_registry_auth | default(False) | bool

- name: bootstrap the cluster
  hosts: "{{ groups.get('mons')[0] }}"
  become: true
  gather_facts: false
  tasks:
    - import_role:
        name: ceph_defaults

    - name: bootstrap initial cluster
      ceph_orch:
        cli_binary: true
        command: "cephadm bootstrap {{ '--fsid ' + fsid if fsid is defined else '' }} --mon-ip {{ monitor_address }} --skip-pull"

- name: add the other nodes
  hosts:
    - mons
    - mgrs
    - osds
  become: true
  gather_facts: false
  tasks:
    - import_role:
        name: ceph_defaults

    - name: get the cephadm ssh pub key
      ceph_orch:
        command: "cephadm get-pub-key"
      changed_when: false
      run_once: true
      register: cephadm_pubpkey
      delegate_to: "{{ groups['mons'][0] }}"

    - name: allow cephadm key for root account
      authorized_key:
        user: root
        key: '{{ cephadm_pubpkey.stdout }}'

    - name: run cephadm prepare-host
      ceph_orch:
        cli_binary: true
        command: cephadm prepare-host
      changed_when: false

    - name: manage nodes with cephadm
      ceph_orch:
        command: "orch host add {{ ansible_facts['hostname'] }} {{ ansible_facts['default_ipv4']['address'] }} {{ group_names | join(' ') }} {{ '_admin monitoring' if inventory_hostname == 'ceph-node0' else '' }}"
      changed_when: false
      delegate_to: "{{ groups['mons'][0] }}"

    - name: add ceph label for core component
      ceph_orch:
        command: "orch host label add {{ ansible_facts['hostname'] }} ceph"
      delegate_to: "{{ groups['mons'][0] }}"
      when: inventory_hostname in groups.get('mons', []) or
            inventory_hostname in groups.get('osds', []) or
            inventory_hostname in groups.get('mdss', []) or
            inventory_hostname in groups.get('rgws', []) or
            inventory_hostname in groups.get('mgrs', []) or
            inventory_hostname in groups.get('rbdmirrors', [])

- name: adjust service placement
  hosts: "{{ groups.get('mons')[0] }}"
  become: true
  gather_facts: false
  tasks:
    - import_role:
        name: ceph_defaults

    - name: update the placement of monitor hosts
      ceph_orch:
        command: "orch apply mon --placement=label:mons"

    - name: waiting for the monitor to join the quorum...
      ceph_orch:
        command: "quorum_status --format json"
      register: ceph_health_raw
      changed_when: false
      until: (ceph_health_raw.stdout | from_json)["quorum_names"] | length == groups.get('mons', []) | length
      retries: "{{ health_mon_check_retries }}"
      delay: "{{ health_mon_check_delay }}"

    - name: update the placement of manager hosts
      ceph_orch:
        command: "orch apply mgr --placement=label:mgrs"

    - name: update the placement of osd hosts
      ceph_orch:
        command: "orch apply osd -i -"
        stdin: |
          service_type: osd
          service_id: osd
          placement:
            label: osds
          spec:
            data_devices:
              all: true
      changed_when: false

    - name: update the placement of crash hosts
      ceph_orch:
        command: "orch apply crash --placement=label:ceph"
      changed_when: false

    - name: enable the monitoring
      ceph_orch:
        command: "{{ item }}"
      changed_when: false
      loop:
        - "mgr module enable prometheus"
        - "orch apply alertmanager --placement=label:monitoring"
        - "orch apply grafana --placement=label:monitoring"
        - "orch apply prometheus --placement=label:monitoring"
        - "orch apply node-exporter --placement=*"


# TODO(guits): address the following tasks:
    # - name: show ceph orchestrator services
    #   command: "{{ cephadm_cmd }} shell -- ceph --cluster {{ cluster }} orch ls --refresh"
    #   changed_when: false

    # - name: show ceph orchestrator daemons
    #   command: "{{ cephadm_cmd }} shell -- ceph --cluster {{ cluster }} orch ps --refresh"
    #   changed_when: false